{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TNTNK\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst analyzeFinanceText = text => {\n  // Приводим текст к нижнему регистру для упрощения поиска\n  const lowerText = text.toLowerCase();\n\n  // Определяем тип операции (доход/расход)\n  const incomeKeywords = ['получил', 'заработал', 'зарплата', 'доход'];\n  const expenseKeywords = ['потратил', 'заплатил', 'купил', 'расход'];\n  const type = incomeKeywords.some(word => lowerText.includes(word)) ? 'income' : expenseKeywords.some(word => lowerText.includes(word)) ? 'expense' : null;\n\n  // Ищем число в тексте\n  const numberMatch = lowerText.match(/\\d+/);\n  const amount = numberMatch ? parseInt(numberMatch[0]) : null;\n\n  // Ищем категорию после числа\n  let category = null;\n  if (amount !== null) {\n    const afterNumber = lowerText.slice(lowerText.indexOf(amount.toString()) + amount.toString().length);\n    // Ищем слова после \"на\" или \"за\"\n    const categoryMatch = afterNumber.match(/(?:на|за)\\s+([а-яё]+(?:\\s+[а-яё]+)*)/);\n    if (categoryMatch) {\n      category = categoryMatch[1].trim();\n    }\n  }\n  return {\n    type,\n    amount,\n    category\n  };\n};\nfunction App() {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognizedText, setRecognizedText] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  useEffect(() => {\n    // Проверяем поддержку Web Speech API\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Ваш браузер не поддерживает распознавание речи. Попробуйте использовать Chrome.');\n      return;\n    }\n\n    // Инициализируем распознавание речи\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognitionInstance = new SpeechRecognition();\n    recognitionInstance.continuous = true;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setRecognizedText(transcript);\n      const analysis = analyzeFinanceText(transcript);\n      setAnalysisResult(analysis);\n    };\n    recognitionInstance.onerror = event => {\n      console.error('Ошибка распознавания речи:', event.error);\n      setIsListening(false);\n    };\n    recognitionInstance.onend = () => {\n      setIsListening(false);\n    };\n    setRecognition(recognitionInstance);\n    return () => {\n      if (recognitionInstance) {\n        recognitionInstance.stop();\n      }\n    };\n  }, []);\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n      setIsListening(false);\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n  const getAnalysisDisplay = () => {\n    if (!analysisResult || !analysisResult.type) return null;\n    const typeText = analysisResult.type === 'income' ? 'Доход' : 'Расход';\n    const amountText = analysisResult.amount ? `${analysisResult.amount} ₽` : 'Сумма не указана';\n    const categoryText = analysisResult.category ? `Категория: ${analysisResult.category}` : 'Категория не указана';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `analysis-result ${analysisResult.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: typeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: amountText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: categoryText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Finance Voice Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: toggleListening,\n        children: isListening ? 'Остановить запись' : 'Записать голос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0430\\u0441\\u043F\\u043E\\u0437\\u043D\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0442\\u0435\\u043A\\u0441\\u0442:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transcript-text\",\n          children: recognizedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), getAnalysisDisplay()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5ye+2MqytuelWpR8ZPloz9hAS1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","analyzeFinanceText","text","lowerText","toLowerCase","incomeKeywords","expenseKeywords","type","some","word","includes","numberMatch","match","amount","parseInt","category","afterNumber","slice","indexOf","toString","length","categoryMatch","trim","App","_s","isListening","setIsListening","recognizedText","setRecognizedText","recognition","setRecognition","analysisResult","setAnalysisResult","window","alert","SpeechRecognition","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","analysis","onerror","console","error","onend","stop","toggleListening","start","getAnalysisDisplay","typeText","amountText","categoryText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/TNTNK/OneDrive/Рабочий стол/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst analyzeFinanceText = (text) => {\r\n  // Приводим текст к нижнему регистру для упрощения поиска\r\n  const lowerText = text.toLowerCase();\r\n  \r\n  // Определяем тип операции (доход/расход)\r\n  const incomeKeywords = ['получил', 'заработал', 'зарплата', 'доход'];\r\n  const expenseKeywords = ['потратил', 'заплатил', 'купил', 'расход'];\r\n  \r\n  const type = incomeKeywords.some(word => lowerText.includes(word)) ? 'income' :\r\n               expenseKeywords.some(word => lowerText.includes(word)) ? 'expense' : \r\n               null;\r\n  \r\n  // Ищем число в тексте\r\n  const numberMatch = lowerText.match(/\\d+/);\r\n  const amount = numberMatch ? parseInt(numberMatch[0]) : null;\r\n  \r\n  // Ищем категорию после числа\r\n  let category = null;\r\n  if (amount !== null) {\r\n    const afterNumber = lowerText.slice(lowerText.indexOf(amount.toString()) + amount.toString().length);\r\n    // Ищем слова после \"на\" или \"за\"\r\n    const categoryMatch = afterNumber.match(/(?:на|за)\\s+([а-яё]+(?:\\s+[а-яё]+)*)/);\r\n    if (categoryMatch) {\r\n      category = categoryMatch[1].trim();\r\n    }\r\n  }\r\n  \r\n  return {\r\n    type,\r\n    amount,\r\n    category\r\n  };\r\n};\r\n\r\nfunction App() {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const [recognition, setRecognition] = useState(null);\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Проверяем поддержку Web Speech API\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      alert('Ваш браузер не поддерживает распознавание речи. Попробуйте использовать Chrome.');\r\n      return;\r\n    }\r\n\r\n    // Инициализируем распознавание речи\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognitionInstance = new SpeechRecognition();\r\n    \r\n    recognitionInstance.continuous = true;\r\n    recognitionInstance.interimResults = true;\r\n    recognitionInstance.lang = 'ru-RU';\r\n\r\n    recognitionInstance.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('');\r\n      \r\n      setRecognizedText(transcript);\r\n      const analysis = analyzeFinanceText(transcript);\r\n      setAnalysisResult(analysis);\r\n    };\r\n\r\n    recognitionInstance.onerror = (event) => {\r\n      console.error('Ошибка распознавания речи:', event.error);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionInstance.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    setRecognition(recognitionInstance);\r\n\r\n    return () => {\r\n      if (recognitionInstance) {\r\n        recognitionInstance.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      recognition.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognition.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  const getAnalysisDisplay = () => {\r\n    if (!analysisResult || !analysisResult.type) return null;\r\n\r\n    const typeText = analysisResult.type === 'income' ? 'Доход' : 'Расход';\r\n    const amountText = analysisResult.amount ? `${analysisResult.amount} ₽` : 'Сумма не указана';\r\n    const categoryText = analysisResult.category ? `Категория: ${analysisResult.category}` : 'Категория не указана';\r\n\r\n    return (\r\n      <div className={`analysis-result ${analysisResult.type}`}>\r\n        <h3>{typeText}</h3>\r\n        <p>{amountText}</p>\r\n        <p>{categoryText}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Finance Voice Tracker</h1>\r\n        <button \r\n          className=\"record-button\"\r\n          onClick={toggleListening}\r\n        >\r\n          {isListening ? 'Остановить запись' : 'Записать голос'}\r\n        </button>\r\n        <div className=\"transcript-container\">\r\n          <h2>Распознанный текст:</h2>\r\n          <p className=\"transcript-text\">{recognizedText}</p>\r\n        </div>\r\n        {getAnalysisDisplay()}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}