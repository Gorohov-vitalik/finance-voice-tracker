{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TNTNK\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst analyzeFinanceText = text => {\n  // Приводим текст к нижнему регистру для упрощения поиска\n  const lowerText = text.toLowerCase();\n\n  // Определяем тип операции (доход/расход)\n  const incomeKeywords = ['получил', 'заработал', 'зарплата', 'доход'];\n  const expenseKeywords = ['потратил', 'заплатил', 'купил', 'расход'];\n  const type = incomeKeywords.some(word => lowerText.includes(word)) ? 'income' : expenseKeywords.some(word => lowerText.includes(word)) ? 'expense' : null;\n\n  // Ищем число в тексте\n  const numberMatch = lowerText.match(/\\d+/);\n  const amount = numberMatch ? parseInt(numberMatch[0]) : null;\n\n  // Ищем категорию после числа\n  let category = null;\n  if (amount !== null) {\n    const afterNumber = lowerText.slice(lowerText.indexOf(amount.toString()) + amount.toString().length);\n    // Ищем слова после \"на\" или \"за\"\n    const categoryMatch = afterNumber.match(/(?:на|за)\\s+([а-яё]+(?:\\s+[а-яё]+)*)/);\n    if (categoryMatch) {\n      category = categoryMatch[1].trim();\n    }\n  }\n  return {\n    type,\n    amount,\n    category\n  };\n};\nfunction App() {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognizedText, setRecognizedText] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [operations, setOperations] = useState([]);\n\n  // Загрузка операций из LocalStorage при запуске\n  useEffect(() => {\n    const savedOperations = localStorage.getItem('financeOperations');\n    if (savedOperations) {\n      setOperations(JSON.parse(savedOperations));\n    }\n  }, []);\n\n  // Сохранение операций в LocalStorage при их изменении\n  useEffect(() => {\n    localStorage.setItem('financeOperations', JSON.stringify(operations));\n  }, [operations]);\n  useEffect(() => {\n    // Проверяем поддержку Web Speech API\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Ваш браузер не поддерживает распознавание речи. Попробуйте использовать Chrome.');\n      return;\n    }\n\n    // Инициализируем распознавание речи\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognitionInstance = new SpeechRecognition();\n    recognitionInstance.continuous = true;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setRecognizedText(transcript);\n      const analysis = analyzeFinanceText(transcript);\n      setAnalysisResult(analysis);\n\n      // Если анализ успешен и содержит все необходимые данные, добавляем новую операцию\n      if (analysis.type && analysis.amount) {\n        const newOperation = {\n          ...analysis,\n          id: Date.now(),\n          // Уникальный идентификатор для каждой операции\n          date: new Date().toISOString() // Дата и время операции\n        };\n        setOperations(prevOperations => [...prevOperations, newOperation]);\n      }\n    };\n    recognitionInstance.onerror = event => {\n      console.error('Ошибка распознавания речи:', event.error);\n      setIsListening(false);\n    };\n    recognitionInstance.onend = () => {\n      setIsListening(false);\n    };\n    setRecognition(recognitionInstance);\n    return () => {\n      if (recognitionInstance) {\n        recognitionInstance.stop();\n      }\n    };\n  }, []);\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n      setIsListening(false);\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n  const getAnalysisDisplay = () => {\n    if (!analysisResult || !analysisResult.type) return null;\n    const typeText = analysisResult.type === 'income' ? 'Доход' : 'Расход';\n    const amountText = analysisResult.amount ? `${analysisResult.amount} ₽` : 'Сумма не указана';\n    const categoryText = analysisResult.category ? `Категория: ${analysisResult.category}` : 'Категория не указана';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `analysis-result ${analysisResult.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: typeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: amountText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: categoryText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Finance Voice Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: toggleListening,\n        children: isListening ? 'Остановить запись' : 'Записать голос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0430\\u0441\\u043F\\u043E\\u0437\\u043D\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0442\\u0435\\u043A\\u0441\\u0442:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transcript-text\",\n          children: recognizedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), getAnalysisDisplay(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operations-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), operations.map(operation => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `operation-item ${operation.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operation-date\",\n            children: formatDate(operation.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operation-type\",\n            children: operation.type === 'income' ? 'Доход' : 'Расход'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operation-amount\",\n            children: [operation.amount, \" \\u20BD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), operation.category && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operation-category\",\n            children: operation.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, operation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F2YsoEK3stQP+0YYeb+zhp+K/qk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","analyzeFinanceText","text","lowerText","toLowerCase","incomeKeywords","expenseKeywords","type","some","word","includes","numberMatch","match","amount","parseInt","category","afterNumber","slice","indexOf","toString","length","categoryMatch","trim","App","_s","isListening","setIsListening","recognizedText","setRecognizedText","recognition","setRecognition","analysisResult","setAnalysisResult","operations","setOperations","savedOperations","localStorage","getItem","JSON","parse","setItem","stringify","window","alert","SpeechRecognition","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","analysis","newOperation","id","Date","now","date","toISOString","prevOperations","onerror","console","error","onend","stop","toggleListening","start","getAnalysisDisplay","typeText","amountText","categoryText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","toLocaleString","day","month","year","hour","minute","onClick","operation","_c","$RefreshReg$"],"sources":["C:/Users/TNTNK/OneDrive/Рабочий стол/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst analyzeFinanceText = (text) => {\r\n  // Приводим текст к нижнему регистру для упрощения поиска\r\n  const lowerText = text.toLowerCase();\r\n  \r\n  // Определяем тип операции (доход/расход)\r\n  const incomeKeywords = ['получил', 'заработал', 'зарплата', 'доход'];\r\n  const expenseKeywords = ['потратил', 'заплатил', 'купил', 'расход'];\r\n  \r\n  const type = incomeKeywords.some(word => lowerText.includes(word)) ? 'income' :\r\n               expenseKeywords.some(word => lowerText.includes(word)) ? 'expense' : \r\n               null;\r\n  \r\n  // Ищем число в тексте\r\n  const numberMatch = lowerText.match(/\\d+/);\r\n  const amount = numberMatch ? parseInt(numberMatch[0]) : null;\r\n  \r\n  // Ищем категорию после числа\r\n  let category = null;\r\n  if (amount !== null) {\r\n    const afterNumber = lowerText.slice(lowerText.indexOf(amount.toString()) + amount.toString().length);\r\n    // Ищем слова после \"на\" или \"за\"\r\n    const categoryMatch = afterNumber.match(/(?:на|за)\\s+([а-яё]+(?:\\s+[а-яё]+)*)/);\r\n    if (categoryMatch) {\r\n      category = categoryMatch[1].trim();\r\n    }\r\n  }\r\n  \r\n  return {\r\n    type,\r\n    amount,\r\n    category\r\n  };\r\n};\r\n\r\nfunction App() {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const [recognition, setRecognition] = useState(null);\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [operations, setOperations] = useState([]);\r\n\r\n  // Загрузка операций из LocalStorage при запуске\r\n  useEffect(() => {\r\n    const savedOperations = localStorage.getItem('financeOperations');\r\n    if (savedOperations) {\r\n      setOperations(JSON.parse(savedOperations));\r\n    }\r\n  }, []);\r\n\r\n  // Сохранение операций в LocalStorage при их изменении\r\n  useEffect(() => {\r\n    localStorage.setItem('financeOperations', JSON.stringify(operations));\r\n  }, [operations]);\r\n\r\n  useEffect(() => {\r\n    // Проверяем поддержку Web Speech API\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      alert('Ваш браузер не поддерживает распознавание речи. Попробуйте использовать Chrome.');\r\n      return;\r\n    }\r\n\r\n    // Инициализируем распознавание речи\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognitionInstance = new SpeechRecognition();\r\n    \r\n    recognitionInstance.continuous = true;\r\n    recognitionInstance.interimResults = true;\r\n    recognitionInstance.lang = 'ru-RU';\r\n\r\n    recognitionInstance.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('');\r\n      \r\n      setRecognizedText(transcript);\r\n      const analysis = analyzeFinanceText(transcript);\r\n      setAnalysisResult(analysis);\r\n\r\n      // Если анализ успешен и содержит все необходимые данные, добавляем новую операцию\r\n      if (analysis.type && analysis.amount) {\r\n        const newOperation = {\r\n          ...analysis,\r\n          id: Date.now(), // Уникальный идентификатор для каждой операции\r\n          date: new Date().toISOString() // Дата и время операции\r\n        };\r\n        setOperations(prevOperations => [...prevOperations, newOperation]);\r\n      }\r\n    };\r\n\r\n    recognitionInstance.onerror = (event) => {\r\n      console.error('Ошибка распознавания речи:', event.error);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionInstance.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    setRecognition(recognitionInstance);\r\n\r\n    return () => {\r\n      if (recognitionInstance) {\r\n        recognitionInstance.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      recognition.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognition.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  const getAnalysisDisplay = () => {\r\n    if (!analysisResult || !analysisResult.type) return null;\r\n\r\n    const typeText = analysisResult.type === 'income' ? 'Доход' : 'Расход';\r\n    const amountText = analysisResult.amount ? `${analysisResult.amount} ₽` : 'Сумма не указана';\r\n    const categoryText = analysisResult.category ? `Категория: ${analysisResult.category}` : 'Категория не указана';\r\n\r\n    return (\r\n      <div className={`analysis-result ${analysisResult.type}`}>\r\n        <h3>{typeText}</h3>\r\n        <p>{amountText}</p>\r\n        <p>{categoryText}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('ru-RU', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Finance Voice Tracker</h1>\r\n        <button \r\n          className=\"record-button\"\r\n          onClick={toggleListening}\r\n        >\r\n          {isListening ? 'Остановить запись' : 'Записать голос'}\r\n        </button>\r\n        <div className=\"transcript-container\">\r\n          <h2>Распознанный текст:</h2>\r\n          <p className=\"transcript-text\">{recognizedText}</p>\r\n        </div>\r\n        {getAnalysisDisplay()}\r\n        <div className=\"operations-list\">\r\n          <h2>История операций</h2>\r\n          {operations.map(operation => (\r\n            <div key={operation.id} className={`operation-item ${operation.type}`}>\r\n              <div className=\"operation-date\">{formatDate(operation.date)}</div>\r\n              <div className=\"operation-type\">\r\n                {operation.type === 'income' ? 'Доход' : 'Расход'}\r\n              </div>\r\n              <div className=\"operation-amount\">{operation.amount} ₽</div>\r\n              {operation.category && (\r\n                <div className=\"operation-category\">{operation.category}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}